resources:

  repositories:
  - repository: self
    type: git
   
variables:
  appName: check-your-czech
  experimentalSlotName: exp
  adminEmail: 'petersemkin@gmail.com'
  subscription: Visual Studio Enterprise Subscription (a7b6f428-0ed2-4721-9548-d17c361d9b77)

stages:
- stage: Build
  jobs:
  - job: Job1
    displayName: 'Build, Test, Publish'
    pool:
      vmImage: windows-2019
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore tools
      inputs:
        command: custom
        custom: tool
        arguments: restore

    - task: DotNetCoreCLI@2
      displayName: Restore backend packages
      inputs:
        command: custom
        custom: paket
        arguments: restore

    - task: Yarn@2
      displayName: Restore frontend packages
      inputs:
        Arguments: install --frozen-lockfile

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: custom
        custom: fsi
        arguments: build.fsx

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        arguments: --filter FullyQualifiedName!~Client.UiTests

    - task: DotNetCoreCLI@2
      displayName: Publish Server
      inputs:
        command: publish
        publishWebProjects: false
        projects: src/Server
        arguments: -c release -o deploy -r win-x64
        zipAfterPublish: false
        modifyOutputPath: false

    - task: CopyFiles@2
      displayName: Publish Client
      inputs:
        SourceFolder: src/Client/public
        TargetFolder: deploy/public

    - task: DotNetCoreCLI@2
      displayName: Publish Scraper
      inputs:
        command: publish
        publishWebProjects: false
        projects: src/Scraper
        arguments: -c release -o deploy/app_data/Jobs/Continuous/Scraper -r win-x64
        zipAfterPublish: false
        modifyOutputPath: false

    - task: ArchiveFiles@2
      displayName: Zip app
      inputs:
        rootFolderOrFile: deploy
        includeRootFolder: false
        archiveFile: deploy.zip

    - publish: deploy.zip
      artifact: WebApp

- stage: Release
  dependsOn: Build
  jobs:
  - job: Job1
    displayName: Create resources
    pool:
      vmImage: windows-2019
    steps:
    - download: current
      artifact: WebApp

    - task: DotNetCoreCLI@2
      displayName: Restore tools
      inputs:
        command: custom
        custom: tool
        arguments: restore

    - task: DotNetCoreCLI@2
      displayName: Restore backend packages
      inputs:
        command: custom
        custom: paket
        arguments: restore

    - task: DotNetCoreCLI@2
      displayName: Generate ARM template from Farmer
      inputs:
        command: run
        arguments: $(appName)
        workingDirectory: deployment/Deployment
    
    - task: AzureResourceGroupDeployment@2
      displayName: Create Application Insights
      inputs:
        azureSubscription: $(subscription)
        resourceGroupName: $(appName)
        location: North Europe
        csmFile: arm-template.json
        overrideParameters: -appName $(appName) -adminEmail $(adminEmail)
        deploymentName: $(appName)
    
    - task: AzureResourceGroupDeployment@2
      displayName: Create other Azure resources
      inputs:
        azureSubscription: $(subscription)
        resourceGroupName: $(appName)
        location: North Europe
        csmFile: deployment/Deployment/template.json
        deploymentName: $(appName)

    - task: AzureCLI@1
      displayName: Create experimental slot
      inputs:
        azureSubscription: $(subscription)
        scriptLocation: inlineScript
        inlineScript: az webapp deployment slot create -n $(appName) -g $(appName) -s $(experimentalSlotName)

  - deployment: Job2
    displayName: Deploy to Experimental
    dependsOn: Job1
    pool:
      vmImage: windows-2019
    environment: Experimental
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Visual Studio Enterprise Subscription (a7b6f428-0ed2-4721-9548-d17c361d9b77)'
              appType: 'webAppLinux'
              appName: 'check-your-czech'
              package: '$(System.DefaultWorkingDirectory)/**/*.zip'