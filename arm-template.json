{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string"
    }
  },
  "variables": {
    "appServicePlan": "[concat(parameters('appName'), '-web-host')]",
    "storage": "[concat(replace(parameters('appName'),'-', ''), 'storage')]",
    "insights": "[concat(parameters('appName'), '-insights')]",
    "location": "northeurope"
  },
  "resources": [
	{
		"type": "microsoft.insights/actionGroups",
		"name": "Email",
		"apiVersion": "2018-03-01",
		"location": "Global",
		"properties": {
			"groupShortName": "Email",
			"enabled": true,
			"emailReceivers": [
				{
					"name": "Send Email_-EmailAction-",
					"emailAddress": "petersemkin@gmail.com"
				}
			]
		}
	},
    {
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "name": "[variables('insights')]",
      "location": "[variables('location')]",
      "apiVersion": "2014-04-01",
      "scale": null,
      "properties": {
        "name": "[variables('insights')]"
      }
    },
	{
		"type": "microsoft.insights/scheduledqueryrules",
		"name": "Exceptions",
		"apiVersion": "2018-04-16",
		"location": "northeurope",
		"tags": {
			"[concat('hidden-link:/subscriptions/f400689a-038c-49be-a6ee-2d98e5000d90/resourcegroups/', parameters('appName'), '/providers/microsoft.insights/components/', variables('insights'))]": "Resource"
		},
		"properties": {
			"description": "[concat('Any exceptions happening in the app')]",
			"enabled": "true",
			"source": {
				"query": "exceptions",
				"authorizedResources": [],
				"dataSourceId": "[resourceId('microsoft.insights/components', variables('insights'))]",
				"queryType": "ResultCount"
			},
			"schedule": {
				"frequencyInMinutes": 5,
				"timeWindowInMinutes": 5
			},
			"action": {
				"odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
				"severity": 4,
				"aznsAction": {
					"actionGroup": "[array(concat('/subscriptions/f400689a-038c-49be-a6ee-2d98e5000d90/resourceGroups/', parameters('appName'), '/providers/microsoft.insights/actiongroups/Email'))]",
					"emailSubject": "Check Your Exceptions"
			    },
				"trigger": {
					"thresholdOperator": "GreaterThan",
					"threshold": 0
				}
			}
		},
		"dependsOn": [
			"[resourceId('microsoft.insights/components', variables('insights'))]"
		]
	},
	{
		"type": "microsoft.insights/scheduledqueryrules",
		"name": "Requests",
		"apiVersion": "2018-04-16",
		"location": "northeurope",
		"tags": {
			"[concat('hidden-link:/subscriptions/f400689a-038c-49be-a6ee-2d98e5000d90/resourcegroups/', parameters('appName'), '/providers/microsoft.insights/components/', variables('insights'))]": "Resource"
		},
		"properties": {
			"description": "[concat('All the requests sent to the service')]",
			"enabled": "true",
			"source": {
				"query": "requests",
				"authorizedResources": [],
				"dataSourceId": "[resourceId('microsoft.insights/components', variables('insights'))]",
				"queryType": "ResultCount"
			},
			"schedule": {
				"frequencyInMinutes": 30,
				"timeWindowInMinutes": 30
			},
			"action": {
				"odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
				"severity": 2,
			    "aznsAction": {
					"actionGroup": "[array(concat('/subscriptions/f400689a-038c-49be-a6ee-2d98e5000d90/resourceGroups/', parameters('appName'), '/providers/microsoft.insights/actiongroups/Email'))]",
					"emailSubject": "Check Your Requests"
			    },
				"trigger": {
					"thresholdOperator": "GreaterThan",
					"threshold": 0
				}
			}
		},
		"dependsOn": [
			"[resourceId('microsoft.insights/components', variables('insights'))]"
		]
	},
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storage')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "F1"
      },
      "name": "[variables('appServicePlan')]",
      "apiVersion": "2016-09-01",
      "location": "[variables('location')]",
      "properties": {
        "name": "[variables('appserviceplan')]",
        "perSiteScaling": false,
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[parameters('appName')]",
      "apiVersion": "2016-08-01",
      "location": "[variables('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "public_path",
              "value": "./public"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('Microsoft.Insights/components/', variables('insights'))).InstrumentationKey]"
            },
            {
              "name": "STORAGE_CONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storage')), '2017-10-01').keys[0].value)]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlan'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storage'))]",
        "[resourceId('Microsoft.Insights/components/', variables('insights'))]"
      ],
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "Microsoft.ApplicationInsights.AzureWebSites",
          "type": "siteextensions",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('appName'))]"
          ],
          "properties": {}
        }
      ]
    }
  ],
  "outputs": {
    "webAppPassword": {
      "type": "string",
      "value": "[list(resourceId('Microsoft.Web/sites/config', parameters('appName'), 'publishingcredentials'), '2014-06-01').properties.publishingPassword]"
    }
  }
}